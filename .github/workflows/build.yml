name: Build BSR

on:
  push:
    branches:
      - master
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        bsr_version: ['3', '4']
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
    - name: Get Sources
      uses: actions/checkout@v2

    - name: Install Dependencies (Linux)
      run: |
        sudo apt-mark hold firefox
        sudo apt-get update
        sudo apt-get upgrade
        sudo apt-get install -y build-essential gfortran cmake \
           libopenblas-dev openmpi-bin openmpi-common libopenmpi-dev libscalapack-openmpi-dev
        ${{ github.workspace }}/.github/workflows/ubuntu-fix-scalapack.sh
      if: matrix.os == 'ubuntu-latest'
    - name: Install Dependencies (macOS)
      run: |
        sudo ln -s $(brew --prefix)/bin/gfortran-13 $(brew --prefix)/bin/gfortran
        brew install gcc gfortran cmake open-mpi openblas scalapack
      if: matrix.os == 'macos-latest'

    - name: Setup CMake
      run: |
        mkdir "${{ runner.workspace }}/build"
        cd "${{ runner.workspace }}/build"
        cmake -DBSR_VERSION=${{ matrix.bsr_version}} $GITHUB_WORKSPACE/src
      shell: bash

    - name: Build
      run: cmake --build .
      working-directory: ${{ runner.workspace }}/build
    - name: Test
      run: ctest -V
      working-directory: ${{ runner.workspace }}/build
